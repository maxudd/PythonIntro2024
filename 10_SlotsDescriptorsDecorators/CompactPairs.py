"""
Двухбуквенные поля

Написать класс Pairs, в экземпляре которого присутствуют поля с именами всех
латинских букв (и строчных, и прописных). При инициализации экземпляру
передаётся единственный параметр 1 ⩽ N ⩽ 52 — значение поля .a. Поле .b должно
быть на 1 больше, и так далее до 52, после чего нумерация идёт с 1.
При преобразовании объекта в строку должны выводиться через пробел имена полей
в следующем порядке: сначала то, которое при создании было равно 1, затем то,
которое было равно 2 и т. д. Если значение поля впоследствии изменилось,
порядок сохраняется.
"""


from string import ascii_letters


class Pairs:
    __slots__ = ['start'] + list(ascii_letters)

    def __init__(self, N):
        self.start = 52 - N + 2
        for i in range(N - 1, N + 51):
            setattr(self, self.__slots__[i - N + 2], (i % 52) + 1)

    def __str__(self):
        return ' '.join(sorted(self.__slots__[1:],
                               key=lambda x: getattr(self, x)))
